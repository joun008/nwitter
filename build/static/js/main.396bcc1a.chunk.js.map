{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAIN_ID","appId","firebase","authService","getAuth","dbService","getFirestore","storgeService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","error","setError","onSubmit","event","a","console","log","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","classsName","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDispalyname","getMyNweets","getDocs","query","where","orderBy","d","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","ind","indexOf","end","substring","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.396bcc1a.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport {getAuth} from\"firebase/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {getStorage} from \"firebase/storage\";\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = getAuth();\r\n\r\nexport const dbService = getFirestore();\r\n\r\nexport const storgeService = getStorage();","import React,{useState} from \"react\";\r\nimport {createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword} from \"firebase/auth\";\r\nimport { authService } from \"myBase\";\r\n\r\nconst AuthForm= () => {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount,setnewAccount]=useState(true);\r\n    const [error,setError]= useState(\"\");\r\n    const toggleAccount = () => setnewAccount((prev)=>!prev);\r\n    const onSubmit = async (event) =>{\r\n        console.log(\"click\")\r\n        event.preventDefault() \r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await createUserWithEmailAndPassword(\r\n                    authService,\r\n                    email,\r\n                    password\r\n                );\r\n            }else{\r\n                data = await signInWithEmailAndPassword(\r\n                    authService,\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        }\r\n        catch(error){\r\n            setError(error.message)\r\n        }    \r\n    };\r\n    const onChange = (event) =>{\r\n        const {\r\n            target:{ name, value},\r\n        } = event;\r\n        if (name ===\"email\"){\r\n            setEmail(value);\r\n        }\r\n        else if(name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n   \r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\" \r\n                    required value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\" \r\n                    required value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error &&<span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\": \"Create Account\"} \r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm","import React from \"react\";\r\nimport { signInWithPopup,\r\n    GoogleAuthProvider,\r\n    GithubAuthProvider} from \"firebase/auth\";\r\nimport { authService } from \"myBase\";\r\nimport AuthForm from \"components/AuthForm\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () =>{\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name},\r\n        }=event;\r\n        let provider;\r\n        if (name === \"google\"){\r\n            provider = new GoogleAuthProvider();\r\n        }else if (name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        await signInWithPopup(authService,provider);\r\n    };\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue wiht Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React,{useState} from \"react\";\r\nimport { doc,deleteDoc,updateDoc} from \"firebase/firestore\";\r\nimport { deleteObject,ref } from \"@firebase/storage\";\r\nimport { dbService, storgeService } from \"myBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) =>{\r\n    const [editing,setEditing]= useState(false);\r\n    const [newNweet,setNewNweet]= useState(nweetObj.text);\r\n    const NweetTextRef = doc(dbService,'nweets',nweetObj.id);\r\n\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\r\n        if(ok){\r\n            await deleteDoc(NweetTextRef);\r\n            await deleteObject(ref(storgeService,nweetObj.attachmentUrl));\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev)=>!prev);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await updateDoc(NweetTextRef,{\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n    return(\r\n        <div className=\"nweet\">\r\n            {\r\n                editing?(\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={newNweet}\r\n                                required\r\n                                autoFocus\r\n                                onChange={onChange}\r\n                                className=\"formInput\"\r\n                                />\r\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing} classsName=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </button>\r\n                    </>\r\n                ):(\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n                    { isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </> \r\n            )}     \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import React,{useState} from 'react';\r\nimport {ref, uploadString,getDownloadURL} from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport {dbService, storgeService}  from \"myBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n    const [nweet,setNweet] = useState(\"\");\r\n    const [attachment,setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        let attachmentUrl=\"\";\r\n        if(attachment!==\"\"){\r\n            const attachmentRef = ref(storgeService, userObj.uid+'/'+uuidv4());\r\n            const response = await uploadString(attachmentRef,attachment,\"data_url\");\r\n            attachmentUrl = await getDownloadURL(response.ref);\r\n        }\r\n        const nweetObj={\r\n            text : nweet ,\r\n            createdAt: Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await addDoc(collection(dbService,\"nweets\"),nweetObj);\r\n        setNweet(\"\")\r\n        setAttachment(\"\")\r\n    };\r\n    const onChange = (event) =>{\r\n        const {target:{value}} = event;\r\n        setNweet(value)\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target:{files}}=event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) =>{\r\n            const{\r\n                currentTarget :{result},\r\n            } = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    placeholder=\"what's on your mind?\" \r\n                    maxLength={120}/>\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment &&(\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\nexport default NweetFactory;","import {dbService}  from \"myBase\";\r\nimport { collection,onSnapshot } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) =>{\r\n    const [nweets,setNweets]= useState([]);\r\n    useEffect(()=> {\r\n        onSnapshot(collection(dbService,\"nweets\"),(snapshot)=>{\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data()\r\n            }));\r\n\r\n            setNweets(nweetArray)\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{marginTop:30}}>\r\n                {nweets.map((nweet)=>(\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId===userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import { updateProfile } from \"@firebase/auth\";\r\nimport { collection, getDocs, orderBy, query, where } from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj,refreshUser }) =>{\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDispalyname]= useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n        refreshUser();\r\n    };\r\n    const getMyNweets = async() =>{\r\n        const nweets = await getDocs(\r\n            query(\r\n                collection(dbService,\"nweets\"),\r\n                where(\"createorId\",\"==\",userObj.uid),\r\n                orderBy(\"createdAt\",\"desc\")\r\n            )\r\n        )\r\n        console.log(nweets.docs.map((d)=>d.data()));\r\n        \r\n    };\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    },[]);\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value},\r\n        }=event;\r\n        setNewDispalyname(value);\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault()\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(await authService.currentUser,{\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    } \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName ? userObj.displayName+\"의 Profile\" : \"Profile\"}\r\n                </span>\r\n        </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation\r\n","import React from \"react\";\r\nimport { HashRouter as Router,Route,Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\n\r\nconst AppRouter = ({refreshUser,isLoggedIn,userObj}) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    > \r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n\r\n                    </div>\r\n                ): (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React,{useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"myBase\";\nimport {onAuthStateChanged,updateProfile} from \"firebase/auth\";\n\n\nfunction App() {\n  const [init,setInit] = useState(false)\n  const [userObj,setUserObj] = useState(null);\n  useEffect(()=>{\n    onAuthStateChanged(authService,(user)=>{\n      if(user){\n        if(user.displayName==null){\n          const ind = user.email.indexOf(\"@\")\n          const end = user.email.substring(0,ind)\n          updateProfile(user,{displayName:end});\n        }\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true)\n    });\n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n    });\n  }\n  return(\n    <>\n      {init ? <AppRouter \n                refreshUser = {refreshUser}\n                isLoggedIn={Boolean(userObj)}\n                userObj={userObj}/> : \"Initializing\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"style.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}